/*
 * Dropbox Sign API
 *
 * Dropbox Sign v3 API
 *
 * The version of the OpenAPI document: 3.0.0
 * Contact: apisupport@hellosign.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = HelloSign.Client.OpenAPIDateConverter;

namespace HelloSign.Model
{
    /// <summary>
    /// Contains information about the BulkSendJob such as when it was created and how many signature requests are queued.
    /// </summary>
    [DataContract(Name = "BulkSendJobResponse")]
    [JsonObject(ItemNullValueHandling = NullValueHandling.Ignore)]
    public partial class BulkSendJobResponse : IOpenApiTyped, IEquatable<BulkSendJobResponse>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="BulkSendJobResponse" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected BulkSendJobResponse() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="BulkSendJobResponse" /> class.
        /// </summary>
        /// <param name="bulkSendJobId">The id of the BulkSendJob..</param>
        /// <param name="total">The total amount of Signature Requests queued for sending..</param>
        /// <param name="isCreator">True if you are the owner of this BulkSendJob, false if it&#39;s been shared with you by a team member..</param>
        /// <param name="createdAt">Time that the BulkSendJob was created..</param>
        public BulkSendJobResponse(string bulkSendJobId = default(string), int total = default(int), bool isCreator = default(bool), int createdAt = default(int))
        {
            
            this.BulkSendJobId = bulkSendJobId;
            this.Total = total;
            this.IsCreator = isCreator;
            this.CreatedAt = createdAt;
        }

        /// <summary>
        /// The id of the BulkSendJob.
        /// </summary>
        /// <value>The id of the BulkSendJob.</value>
        [DataMember(Name = "bulk_send_job_id", EmitDefaultValue = true)]
        public string BulkSendJobId { get; set; }

        /// <summary>
        /// The total amount of Signature Requests queued for sending.
        /// </summary>
        /// <value>The total amount of Signature Requests queued for sending.</value>
        [DataMember(Name = "total", EmitDefaultValue = true)]
        public int Total { get; set; }

        /// <summary>
        /// True if you are the owner of this BulkSendJob, false if it&#39;s been shared with you by a team member.
        /// </summary>
        /// <value>True if you are the owner of this BulkSendJob, false if it&#39;s been shared with you by a team member.</value>
        [DataMember(Name = "is_creator", EmitDefaultValue = true)]
        public bool IsCreator { get; set; }

        /// <summary>
        /// Time that the BulkSendJob was created.
        /// </summary>
        /// <value>Time that the BulkSendJob was created.</value>
        [DataMember(Name = "created_at", EmitDefaultValue = true)]
        public int CreatedAt { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class BulkSendJobResponse {\n");
            sb.Append("  BulkSendJobId: ").Append(BulkSendJobId).Append("\n");
            sb.Append("  Total: ").Append(Total).Append("\n");
            sb.Append("  IsCreator: ").Append(IsCreator).Append("\n");
            sb.Append("  CreatedAt: ").Append(CreatedAt).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as BulkSendJobResponse);
        }

        /// <summary>
        /// Returns true if BulkSendJobResponse instances are equal
        /// </summary>
        /// <param name="input">Instance of BulkSendJobResponse to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(BulkSendJobResponse input)
        {
            if (input == null)
            {
                return false;
            }
            return 
                (
                    this.BulkSendJobId == input.BulkSendJobId ||
                    (this.BulkSendJobId != null &&
                    this.BulkSendJobId.Equals(input.BulkSendJobId))
                ) && 
                (
                    this.Total == input.Total ||
                    this.Total.Equals(input.Total)
                ) && 
                (
                    this.IsCreator == input.IsCreator ||
                    this.IsCreator.Equals(input.IsCreator)
                ) && 
                (
                    this.CreatedAt == input.CreatedAt ||
                    this.CreatedAt.Equals(input.CreatedAt)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.BulkSendJobId != null)
                {
                    hashCode = (hashCode * 59) + this.BulkSendJobId.GetHashCode();
                }
                hashCode = (hashCode * 59) + this.Total.GetHashCode();
                hashCode = (hashCode * 59) + this.IsCreator.GetHashCode();
                hashCode = (hashCode * 59) + this.CreatedAt.GetHashCode();
                return hashCode;
            }
        }

        public List<OpenApiType> GetOpenApiTypes()
        {
            var types = new List<OpenApiType>();
            types.Add(new OpenApiType(){
                Name = "bulk_send_job_id",
                Property = "BulkSendJobId",
                Type = "string",
                Value = BulkSendJobId,
            });
            types.Add(new OpenApiType(){
                Name = "total",
                Property = "Total",
                Type = "int",
                Value = Total,
            });
            types.Add(new OpenApiType(){
                Name = "is_creator",
                Property = "IsCreator",
                Type = "bool",
                Value = IsCreator,
            });
            types.Add(new OpenApiType(){
                Name = "created_at",
                Property = "CreatedAt",
                Type = "int",
                Value = CreatedAt,
            });

            return types;
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        public IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
